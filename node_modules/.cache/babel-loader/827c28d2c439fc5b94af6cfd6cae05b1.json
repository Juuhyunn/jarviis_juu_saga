{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { historyFailure, historyRequest, historySuccess } from \"features/history/reducer/historySlice\";\nimport { historyListRequest, historyListSuccess, historyListFailure } from \"features/history/reducer/historySlice\";\nimport { historyAPI } from \"features/history\";\n\nfunction* create(action) {\n  try {\n    alert(\"Aaaaaaaaaaa\");\n    const result = yield call(historyAPI.createAPI, action.payload);\n    yield put(historySuccess(result));\n    alert(\"나 결과 가지고 도라옴\");\n  } catch (error) {\n    yield put(historyFailure(error));\n    alert(\"에ㅓㄹ에러에러에ㅓㄹ\");\n  }\n}\n\nexport function* watchCreate() {\n  yield takeLatest(historyRequest.type, create);\n} //리스트\n\nfunction* list(action) {\n  try {\n    // alert(\"Aaaaaaaaaaa\")\n    const result = yield call(historyAPI.listAPI, action.payload); // alert(result)\n\n    yield put(historyListSuccess(result));\n    alert(\"나 결과 가지고 도라옴\");\n    alert(JSON.stringify(result.data));\n    window.localStorage.setItem('sessionHistory', JSON.stringify(result.data));\n  } catch (error) {\n    yield put(historyListFailure(error));\n    alert(\"에ㅓㄹ에러에러에ㅓㄹ\");\n    alert(error);\n  }\n}\n\nexport function* watchList() {\n  yield takeLatest(historyListRequest.type, list);\n}","map":{"version":3,"sources":["C:/Users/bitcamp/____/진행중/typescript-jarviis-frontend/src/features/history/module/historySaga.ts"],"names":["call","put","takeLatest","historyFailure","historyRequest","historySuccess","historyListRequest","historyListSuccess","historyListFailure","historyAPI","create","action","alert","result","createAPI","payload","error","watchCreate","type","list","listAPI","JSON","stringify","data","window","localStorage","setItem","watchList"],"mappings":"AACA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAA6BC,cAA7B,EAA6DC,cAA7D,EAA6EC,cAA7E,QAAoH,uCAApH;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,kBAAjD,QAA2E,uCAA3E;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,UAAUC,MAAV,CAAiBC,MAAjB,EAAwD;AACpD,MAAI;AACAC,IAAAA,KAAK,CAAC,aAAD,CAAL;AACA,UAAMC,MAA0B,GAAG,MAAMb,IAAI,CACzCS,UAAU,CAACK,SAD8B,EAEzCH,MAAM,CAACI,OAFkC,CAA7C;AAIA,UAAMd,GAAG,CAACI,cAAc,CAACQ,MAAD,CAAf,CAAT;AACAD,IAAAA,KAAK,CAAC,cAAD,CAAL;AACH,GARD,CAQE,OAAOI,KAAP,EAAmB;AACjB,UAAMf,GAAG,CAACE,cAAc,CAACa,KAAD,CAAf,CAAT;AACAJ,IAAAA,KAAK,CAAC,YAAD,CAAL;AACH;AACJ;;AAED,OAAO,UAAUK,WAAV,GAAwB;AAC3B,QAAMf,UAAU,CAACE,cAAc,CAACc,IAAhB,EAAsBR,MAAtB,CAAhB;AACH,C,CACD;;AACA,UAAUS,IAAV,CAAeR,MAAf,EAAuD;AACnD,MAAI;AACA;AACA,UAAME,MAA0B,GAAG,MAAMb,IAAI,CACzCS,UAAU,CAACW,OAD8B,EAEzCT,MAAM,CAACI,OAFkC,CAA7C,CAFA,CAMA;;AACA,UAAMd,GAAG,CAACM,kBAAkB,CAACM,MAAD,CAAnB,CAAT;AACAD,IAAAA,KAAK,CAAC,cAAD,CAAL;AACAA,IAAAA,KAAK,CAACS,IAAI,CAACC,SAAL,CAAeT,MAAM,CAACU,IAAtB,CAAD,CAAL;AAEAC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,gBAA5B,EAA8CL,IAAI,CAACC,SAAL,CAAeT,MAAM,CAACU,IAAtB,CAA9C;AAEH,GAbD,CAaE,OAAOP,KAAP,EAAmB;AACjB,UAAMf,GAAG,CAACO,kBAAkB,CAACQ,KAAD,CAAnB,CAAT;AACAJ,IAAAA,KAAK,CAAC,YAAD,CAAL;AACAA,IAAAA,KAAK,CAACI,KAAD,CAAL;AACH;AACJ;;AAED,OAAO,UAAUW,SAAV,GAAsB;AACzB,QAAMzB,UAAU,CAACI,kBAAkB,CAACY,IAApB,EAA0BC,IAA1B,CAAhB;AACH","sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { HistoryDataPayload, historyFailure, HistoryPayload, historyRequest, historySuccess, ListDataPayload } from \"features/history/reducer/historySlice\";\nimport { historyListRequest, historyListSuccess, historyListFailure } from \"features/history/reducer/historySlice\"\nimport { historyAPI } from \"features/history\";\n\nfunction* create(action: PayloadAction<HistoryPayload>) {\n    try {\n        alert(\"Aaaaaaaaaaa\")\n        const result: HistoryDataPayload = yield call(\n            historyAPI.createAPI,\n            action.payload\n        );\n        yield put(historySuccess(result));\n        alert(\"나 결과 가지고 도라옴\")\n    } catch (error: any) {\n        yield put(historyFailure(error))\n        alert(\"에ㅓㄹ에러에러에ㅓㄹ\")\n    }\n}\n\nexport function* watchCreate() {\n    yield takeLatest(historyRequest.type, create);\n}\n//리스트\nfunction* list(action: PayloadAction<ListDataPayload>) {\n    try {\n        // alert(\"Aaaaaaaaaaa\")\n        const result: HistoryDataPayload = yield call(\n            historyAPI.listAPI,\n            action.payload\n        );\n        // alert(result)\n        yield put(historyListSuccess(result));\n        alert(\"나 결과 가지고 도라옴\")\n        alert(JSON.stringify(result.data))\n        \n        window.localStorage.setItem('sessionHistory', JSON.stringify(result.data))\n\n    } catch (error: any) {\n        yield put(historyListFailure(error))\n        alert(\"에ㅓㄹ에러에러에ㅓㄹ\")\n        alert(error)\n    }\n}\n\nexport function* watchList() {\n    yield takeLatest(historyListRequest.type, list);\n}"]},"metadata":{},"sourceType":"module"}